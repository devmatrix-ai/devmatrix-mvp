name: Release

on:
  push:
    tags:
      - 'v*.*.*'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  # ============================================================================
  # Create GitHub Release
  # ============================================================================
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    outputs:
      release-version: ${{ steps.version.outputs.version }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Extract version
        id: version
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Version: $VERSION"

      - name: Generate changelog
        id: changelog
        run: |
          # Get previous tag
          PREV_TAG=$(git describe --abbrev=0 --tags $(git rev-list --tags --skip=1 --max-count=1) 2>/dev/null || echo "")

          if [ -z "$PREV_TAG" ]; then
            CHANGELOG=$(git log --pretty=format:"- %s (%h)" | head -20)
          else
            CHANGELOG=$(git log ${PREV_TAG}..HEAD --pretty=format:"- %s (%h)")
          fi

          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          echo "$CHANGELOG" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          name: Release v${{ steps.version.outputs.version }}
          body: |
            ## Changes in v${{ steps.version.outputs.version }}

            ${{ steps.changelog.outputs.changelog }}

            ## Docker Images

            ```bash
            docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.version.outputs.version }}
            docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
            ```

            ## Helm Chart

            ```bash
            helm install devmatrix ./helm/devmatrix \
              --namespace devmatrix \
              --values helm/devmatrix/values/prod.yaml \
              --set api.image.tag=${{ steps.version.outputs.version }}
            ```
          draft: false
          prerelease: false
          generate_release_notes: true

  # ============================================================================
  # Package Helm Chart
  # ============================================================================
  package-helm:
    name: Package Helm Chart
    runs-on: ubuntu-latest
    needs: create-release
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: 'v3.13.0'

      - name: Update Chart version
        run: |
          VERSION=${{ needs.create-release.outputs.release-version }}
          sed -i "s/^version:.*/version: $VERSION/" helm/devmatrix/Chart.yaml
          sed -i "s/^appVersion:.*/appVersion: \"$VERSION\"/" helm/devmatrix/Chart.yaml

      - name: Package Helm chart
        run: |
          helm package helm/devmatrix -d charts/

      - name: Upload Helm chart to release
        uses: softprops/action-gh-release@v1
        with:
          files: charts/*.tgz

  # ============================================================================
  # Publish to PyPI (if applicable)
  # ============================================================================
  publish-pypi:
    name: Publish to PyPI
    runs-on: ubuntu-latest
    needs: create-release
    if: false  # Enable when ready to publish to PyPI
    permissions:
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install build tools
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      - name: Build package
        run: python -m build

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          skip-existing: true

  # ============================================================================
  # Update Documentation
  # ============================================================================
  update-docs:
    name: Update Documentation
    runs-on: ubuntu-latest
    needs: create-release
    if: false  # Enable when documentation site is ready

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          pip install mkdocs mkdocs-material

      - name: Build documentation
        run: mkdocs build

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./site

  # ============================================================================
  # Notify Release
  # ============================================================================
  notify:
    name: Notify Release
    runs-on: ubuntu-latest
    needs: [create-release, package-helm]
    if: always()

    steps:
      - name: Send Slack notification
        if: false  # Enable when Slack webhook is configured
        uses: slackapi/slack-github-action@v1
        with:
          webhook-url: ${{ secrets.SLACK_WEBHOOK }}
          payload: |
            {
              "text": "DevMatrix v${{ needs.create-release.outputs.release-version }} has been released!",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*DevMatrix Release* v${{ needs.create-release.outputs.release-version }}\n<${{ github.server_url }}/${{ github.repository }}/releases/tag/v${{ needs.create-release.outputs.release-version }}|View Release>"
                  }
                }
              ]
            }
