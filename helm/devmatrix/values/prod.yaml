# Production environment overrides

global:
  environment: production

api:
  replicaCount: 5

  image:
    pullPolicy: IfNotPresent
    tag: "latest"

  resources:
    requests:
      memory: "512Mi"
      cpu: "250m"
    limits:
      memory: "1Gi"
      cpu: "1000m"

  autoscaling:
    enabled: true
    minReplicas: 5
    maxReplicas: 20
    targetCPUUtilizationPercentage: 70
    targetMemoryUtilizationPercentage: 80

  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          labelSelector:
            matchExpressions:
            - key: component
              operator: In
              values:
              - api
          topologyKey: kubernetes.io/hostname

postgresql:
  enabled: true

  primary:
    persistence:
      enabled: true
      size: 50Gi
      storageClass: "fast-ssd"

    resources:
      requests:
        memory: "1Gi"
        cpu: "500m"
      limits:
        memory: "4Gi"
        cpu: "2000m"

redis:
  enabled: true

  master:
    persistence:
      enabled: true
      size: 20Gi
      storageClass: "fast-ssd"

    resources:
      requests:
        memory: "512Mi"
        cpu: "250m"
      limits:
        memory: "1Gi"
        cpu: "1000m"

ingress:
  enabled: true
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
  hosts:
    - host: api.devmatrix.example.com
      paths:
        - path: /
          pathType: Prefix
  tls:
    - secretName: devmatrix-prod-tls
      hosts:
        - api.devmatrix.example.com

config:
  logLevel: INFO
  logFormat: json

  api:
    workers: 8
    timeout: 600

  redis:
    maxConnections: 100

  postgres:
    poolSize: 50
    maxOverflow: 20

monitoring:
  enabled: true
  serviceMonitor:
    enabled: true
    interval: 30s

  prometheusRule:
    enabled: true
    rules:
      - alert: HighErrorRate
        expr: rate(http_requests_total{status=~"5.."}[5m]) > 0.05
        for: 5m
        labels:
          severity: critical
        annotations:
          summary: "High error rate detected"
      - alert: HighMemoryUsage
        expr: container_memory_usage_bytes{pod=~"devmatrix-.*"} / container_spec_memory_limit_bytes > 0.9
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "High memory usage detected"

networkPolicy:
  enabled: true
